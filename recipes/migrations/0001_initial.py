# Generated by Django 4.2.23 on 2025-07-26 17:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('category', models.CharField(choices=[('produce', 'Produce'), ('meat', 'Meat & Poultry'), ('fish', 'Fish & Seafood'), ('dairy', 'Dairy'), ('protein', 'Protein'), ('grains', 'Grains & Bread'), ('baking', 'Baking'), ('oils', 'Oils'), ('seasonings', 'Seasonings'), ('spices', 'Spices'), ('herbs', 'Herbs'), ('sweeteners', 'Sweeteners'), ('condiments', 'Condiments'), ('other', 'Other')], default='other', max_length=100)),
                ('common_unit', models.CharField(default='grams', help_text='Most common unit for this ingredient', max_length=50)),
                ('calories_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('protein_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('carbs_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('fat_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('fibre_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('sugars_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('sodium_mg_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('saturated_fat_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('dietary_flags', models.TextField(blank=True, help_text='JSON array of dietary restrictions')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, help_text='Tell us about this recipe!')),
                ('prep_time', models.PositiveIntegerField(help_text='Preparation time in minutes')),
                ('cook_time', models.PositiveIntegerField(help_text='Cooking time in minutes')),
                ('servings', models.PositiveIntegerField(default=4)),
                ('image_url', models.URLField(blank=True, help_text='Link to recipe image')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('tag_type', models.CharField(choices=[('cuisine', 'Cuisine'), ('dietary', 'Dietary'), ('meal_type', 'Meal Type'), ('cooking_method', 'Cooking Method'), ('difficulty', 'Difficulty')], max_length=50)),
                ('color', models.CharField(default='#6c757d', help_text='Hex color like #FF5733', max_length=7)),
            ],
            options={
                'ordering': ['tag_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.CharField(max_length=10)),
                ('unit_type', models.CharField(choices=[('volume', 'Volume'), ('weight', 'Weight'), ('count', 'Count')], max_length=20)),
            ],
            options={
                'ordering': ['unit_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=8)),
                ('notes', models.CharField(blank=True, help_text='e.g., "room temperature", "diced"', max_length=100)),
                ('order', models.PositiveIntegerField(help_text='Order in ingredient list')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.recipe')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.unit')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(blank=True, to='recipes.tag'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='RecipeStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField()),
                ('instruction', models.TextField()),
                ('image_url', models.URLField(blank=True, help_text='Optional image for this step')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='recipes.recipe')),
            ],
            options={
                'ordering': ['step_number'],
                'unique_together': {('recipe', 'step_number')},
            },
        ),
    ]
